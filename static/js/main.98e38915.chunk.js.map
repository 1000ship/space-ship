{"version":3,"sources":["Resource/Map/wannavile.jpg","Resource/Character/ghost.png","Resource/BGM/ghost.mp3","Component/Character.js","Component/FloatingMenu.js","Page/GamePage.js","Utils/SpaceshipUser.js","Utils/SpaceshipSocket.js","Utils/SpaceshipAPI.js","Utils/BGMPlayer.js","App.js","Utils/utility.js","serviceWorker.js","index.js"],"names":["module","exports","Container","styled","div","x","y","CharacterImage","img","CharacterName","span","TalkBox","TalkContent","Character","props","name","message","src","GhostCharacter","Button","button","FloatingMenu","talk","onClick","e","prompt","BackgroundImage","GamePage","moveTo","myUser","userList","WannavileMap","pageX","pageY","map","user","key","id","SpaceshipUser","this","messageTimeout","setPosition","clone","callback","clearTimeout","setTimeout","SpaceshipSocket","host","port","onConnect","onUserListChange","onUserMove","onUserTalk","userName","socket","io","on","console","log","binary","emit","push","exitIndex","findIndex","each","splice","list","socketController","userMe","withPosition","result","filter","forEach","userListCallback","userMeCallback","who","SpaceshipAPI","eventName","args","setUserListCallback","func","setUserMeCallback","setUsername","connect","bgm","BGMPlayer","isPlaying","play","pause","Audio","loop","GhostBGM","App","useState","setMyUser","setUserList","useEffect","styles","keywords","parseInt","length","Math","random","makeRandomName","window","addEventListener","interval","_id","throttle","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.98e38915.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wannavile.2bb886d9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ghost.e01411fa.png\";","module.exports = __webpack_public_path__ + \"static/media/ghost.7b4562b0.mp3\";","import React from \"react\";\nimport styled from \"styled-components\";\nimport GhostCharacter from \"../Resource/Character/ghost.png\";\n\nconst Container = styled.div`\n  position: absolute;\n  left: ${({ x }) => x}px;\n  top: ${({ y }) => y}px;\n  transition left 1s, top 1s;\n  \n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  transform: translate(-50%, -90%);\n  animation-iteration-count: infinite;\n  animation-duration: 1s;\n  animation-name: ghost-animation;\n\n  @keyframes ghost-animation {\n    0% {\n      transform: translate(-50%, -90%);\n    }\n    50% {\n      transform: translate(-50%, -95%);\n    }\n    100% {\n      transform: translate(-50%, -90%);\n    }\n  }\n`;\n\nconst CharacterImage = styled.img`\n  width: 150px;\n  height: 150px;\n  object-fit: contain;\n  object-position: center;\n`;\nconst CharacterName = styled.span`\n  color: white;\n  font-size: 1.5em;\n  white-space: nowrap;\n`;\n\nconst TalkBox = styled.div`\n  position: absolute;\n  top: 0;\n  left: 50%;\n  font-size: 1.5em;\n  transform: translate(-50%, -110%);\n`;\n\nconst TalkContent = styled.div`\n  color: black;\n  background-color: white;\n  border-radius: 10px;\n  padding: 5px 10px;\n  max-width: 100%;\n`;\n\nconst Character = (props) => {\n  const { name, x, y, message } = props;\n\n  return (\n    <Container x={x} y={y}>\n      <CharacterImage src={GhostCharacter}></CharacterImage>\n      <CharacterName>{name}</CharacterName>\n      {message && (\n        <TalkBox>\n          <TalkContent>{message}</TalkContent>\n        </TalkBox>\n      )}\n    </Container>\n  );\n};\n\nexport default Character;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  position: fixed;\n  right: 10px;\n  top: 10px;\n`;\n\nconst Button = styled.button`\n  padding: 20px;\n  font-size: 1.5em;\n`;\n\nconst FloatingMenu = (props) => {\n  const { talk } = props;\n\n  const onTalkClick = (e) => {\n    const message = prompt(\"할 말은?\");\n    if (message) talk(message);\n  };\n\n  return (\n    <Container>\n      <Button onClick={onTalkClick}>대화하기</Button>\n    </Container>\n  );\n};\nexport default FloatingMenu;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport WannavileMap from \"../Resource/Map/wannavile.jpg\";\nimport Character from \"../Component/Character\";\nimport FloatingMenu from \"../Component/FloatingMenu\";\n\nconst Container = styled.div`\n  width: 100vw;\n  height: 100vh;\n`;\n\nconst BackgroundImage = styled.img`\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 1500px;\n`;\n\nconst GamePage = (props) => {\n  const { moveTo, myUser, userList, talk } = props;\n\n  const onBackgroundClick = (e) => {\n    moveTo( e.pageX, e.pageY )\n  }\n\n  return (\n    <Container>\n      <BackgroundImage src={WannavileMap} onClick={onBackgroundClick}></BackgroundImage>\n      {userList.map((user) => (\n        <Character key={user.id} {...user}>\n        </Character>\n      ))}\n      <Character key={myUser.id} {...myUser} >\n      </Character>\n      <FloatingMenu talk={talk}></FloatingMenu>\n    </Container>\n  );\n};\n\nexport default GamePage;\n","function SpaceshipUser(id = \"\", name = \"\") {\n  this.id = id;\n  this.name = name;\n  this.x = 0;\n  this.y = 0;\n  this.message = null;\n  this.messageTimeout = null;\n  this.setPosition = (x, y) => {\n    this.x = x;\n    this.y = y;\n    return this;\n  };\n  this.clone = () => {\n    return {\n      ...this,\n    };\n  };\n  this.talk = (message, callback) => {\n    this.message = message;\n    if (this.messageTimeout) clearTimeout(this.messageTimeout);\n    this.messageTimeout = setTimeout(() => {\n      this.message = null;\n      callback();\n    }, 3000);\n  };\n}\n\nexport default SpaceshipUser;\n","import io from \"socket.io-client\";\n\nexport const EVENT_ENTER = \"e\";\nexport const EVENT_EXIT = \"x\";\nexport const EVENT_USER_LIST = \"l\";\nexport const EVENT_USER_MOVE = \"m\";\nexport const EVENT_USER_TALK = \"t\";\n\nexport default function SpaceshipSocket(\n  host,\n  port,\n  { onConnect, onUserListChange, onUserMove, onUserTalk, userName }\n) {\n  this.socket = io(`http://${host}:${port}`);\n  this.id = \"\";\n  this.userList = [];\n  this.userName = \"\";\n\n  this.socket.on(\"connect\", () => {\n    console.log(\"ID\", this.socket.id);\n    this.socket.binary(true).emit(EVENT_ENTER, this.socket.id, userName);\n    this.id = this.socket.id;\n    onConnect(this.id);\n  });\n\n  this.socket.on(EVENT_ENTER, (id, name) => {\n    // console.log(\"Enter\", id, name);\n    this.userList.push({ id, name });\n    if (onUserListChange) onUserListChange(this.userList);\n  });\n\n  this.socket.on(EVENT_EXIT, (id) => {\n    // console.log(\"Exit\", id);\n    const exitIndex = this.userList.findIndex((each) => each.id === id);\n    if (exitIndex === -1) return;\n    this.userList.splice(exitIndex, 1);\n    if (onUserListChange) onUserListChange(this.userList);\n  });\n\n  this.socket.on(EVENT_USER_LIST, (list) => {\n    this.userList = list;\n    if (onUserListChange) onUserListChange(this.userList, true);\n  });\n\n  this.socket.on(EVENT_USER_MOVE, (id, x, y) => {\n    if (onUserMove) onUserMove(id, x, y);\n  });\n\n  this.socket.on(EVENT_USER_TALK, (id, talk) => {\n    if (onUserTalk) onUserTalk(id, talk);\n  });\n}\n","import SpaceshipUser from \"./SpaceshipUser\";\nimport SpaceshipSocket from \"./SpaceshipSocket\";\n\nconst SOCKET_HOST = \"223.194.70.105\";\n// const SOCKET_HOST = \"localhost\";\nconst SOCKET_PORT = 15040;\n\nconst onConnect = (id) => {\n  userMe.id = id;\n};\n\nconst onUserListChange = (list, withPosition = false) => {\n  const result = [...userList].filter((each) => {\n    const where = list.findIndex(({ id }) => id === each.id);\n    return where !== -1;\n  });\n  list.forEach(({ id, name, x = 0, y = 0 }) => {\n    const where = result.findIndex((each) => each.id === id);\n    if (where === -1 && id !== socket.id) {\n      const user = new SpaceshipUser(id, name);\n      if (withPosition) user.setPosition(x, y);\n      result.push(user);\n    }\n  });\n  userList = result;\n  userListCallback(userList);\n};\n\nconst onUserMove = (id, x, y) => {\n  if (userMe.id === id) {\n    userMe.setPosition(x, y);\n    userMeCallback(userMe);\n    return;\n  }\n  const who = userList.findIndex((each) => each.id === id);\n  const result = [...userList];\n  if (who === -1) return result;\n  result[who].x = x;\n  result[who].y = y;\n  userList = result;\n  userListCallback(userList);\n};\n\nconst onUserTalk = (id, message) => {\n  if (userMe.id === id) {\n    userMe.talk(message, () => userMeCallback(userMe));\n    userMeCallback(userMe);\n    return;\n  }\n  const who = userList.findIndex((each) => each.id === id);\n  if (who === -1) return;\n  userList[who].talk(message, () => userListCallback(userList));\n  userListCallback(userList);\n};\n\nvar socketController;\nvar socket;\n\nexport var userMe = new SpaceshipUser();\nexport var userList = [];\nvar userListCallback = null;\nvar userMeCallback = null;\n\nconst SpaceshipAPI = {\n  emit: (eventName, ...args) => {\n    if (socket) socket.binary(true).emit(eventName, ...args);\n  },\n  setUserListCallback: (func) => {\n    userListCallback = func;\n  },\n  setUserMeCallback: (func) => {\n    userMeCallback = func;\n  },\n  setUsername: (name) => {\n    userMe.name = name;\n  },\n  connect: () => {\n    socketController = new SpaceshipSocket(SOCKET_HOST, SOCKET_PORT, {\n      onConnect,\n      onUserListChange,\n      onUserMove,\n      onUserTalk,\n      userName: userMe.name,\n    });\n    socket = socketController.socket;\n  },\n};\n\nexport default SpaceshipAPI;\n","import GhostBGM from '../Resource/BGM/ghost.mp3'\n\nvar bgm = null;\n\nconst BGMPlayer = {\n  isPlaying: () => bgm !== null,\n  play: () => {\n    try {\n      if (bgm) bgm.pause();\n    } catch {}\n    bgm = new Audio();\n    bgm.loop = true;\n    bgm.src = GhostBGM;\n    bgm.play();\n  },\n  pause: () => {\n    if( bgm ) bgm.pause();\n  },\n};\n\nexport default BGMPlayer;\n","import React, { useState, useEffect } from \"react\";\nimport { throttle, makeRandomName } from \"./Utils/utility\";\nimport GamePage from \"./Page/GamePage\";\nimport SpaceshipAPI from \"./Utils/SpaceshipAPI\";\nimport SpaceshipUser from \"./Utils/SpaceshipUser\";\nimport { EVENT_USER_MOVE, EVENT_USER_TALK } from \"./Utils/SpaceshipSocket\";\nimport BGMPlayer from \"./Utils/BGMPlayer\";\n\nfunction App() {\n  const [myUser, setMyUser] = useState(new SpaceshipUser(\"\", \"\"));\n  const [userList, setUserList] = useState([]);\n\n  useEffect(() => {\n    SpaceshipAPI.setUsername(prompt(\"당신의 이름은?\", makeRandomName()));\n    SpaceshipAPI.setUserListCallback((userList) => {\n      setUserList([...userList]);\n    });\n    SpaceshipAPI.setUserMeCallback((userMe) => {\n      setMyUser({ ...userMe });\n    });\n    SpaceshipAPI.connect();\n    window.addEventListener(\"click\", () => {\n      if (!BGMPlayer.isPlaying()) BGMPlayer.play();\n    });\n  }, []);\n\n  const moveTo = throttle((x, y) => {\n    SpaceshipAPI.emit(EVENT_USER_MOVE, x, y);\n  }, 100);\n\n  const talk = (message) => {\n    SpaceshipAPI.emit(EVENT_USER_TALK, message);\n  };\n\n  return (\n    <GamePage\n      moveTo={moveTo}\n      talk={talk}\n      myUser={myUser}\n      userList={userList}\n    ></GamePage>\n  );\n}\n\nexport default App;\n","export const throttle = (func, interval) => {\n  var _id = null;\n  return (...args) => {\n    if (_id === null)\n      _id = setTimeout(() => {\n        func(...args);\n        _id = null;\n      }, interval);\n  };\n};\n\nexport const makeRandomName = () => {\n  const styles = [\"똑똑한\", \"고요한\", \"고운\", \"기특한\", \"깜찍한\", \"근면한\", \"귀여운\", \"관대한\" ,\"깔끔한\", \"긍정적인\", \"겸손한\"]\n  const keywords = [\"멋쟁이\", \"센스쟁이\", \"개구쟁이\", \"겁쟁이\", \"수다쟁이\", \"소금쟁이\"]\n  return `${styles[parseInt(styles.length * Math.random())]} ${keywords[parseInt(keywords.length * Math.random())]}`\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}