{"version":3,"sources":["Resource/Map/wannavile.jpg","Resource/Character/ghost.png","Component/Character.js","Page/GamePage.js","Utils/SpaceshipUser.js","Utils/SpaceshipSocket.js","Utils/SpaceshipAPI.js","App.js","Utils/utility.js","serviceWorker.js","index.js"],"names":["module","exports","Container","styled","div","x","y","CharacterImage","srcImage","CharacterName","span","Character","props","username","GhostCharacter","BackgroundImage","img","GamePage","moveTo","myUser","userList","src","WannavileMap","onClick","e","pageX","pageY","map","user","key","id","name","SpaceshipUser","this","setPosition","clone","SpaceshipSocket","host","port","onConnect","onUserListChange","onUserMove","userName","socket","io","on","console","log","binary","emit","push","exitIndex","findIndex","each","splice","list","socketController","userMe","withPosition","result","filter","forEach","userListCallback","userMeCallback","who","SpaceshipAPI","eventName","args","setUserListCallback","func","setUserMeCallback","setUsername","connect","App","useState","setMyUser","setUserList","useEffect","prompt","interval","_id","setTimeout","throttle","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b68b5c9f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wannavile.2bb886d9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ghost.e01411fa.png\";","import React from \"react\";\nimport styled from \"styled-components\";\nimport GhostCharacter from \"../Resource/Character/ghost.png\";\n\nconst Container = styled.div`\n  position: absolute;\n  left: ${({x})=>x}px;\n  top: ${({y})=>y}px;\n  transition left 1s, top 1s;\n  \n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  transform: translate(-50%, -90%);\n  animation-iteration-count: infinite;\n  animation-duration: 1s;\n  animation-name: ghost-animation;\n\n  @keyframes ghost-animation {\n    0% {\n      transform: translate(-50%, -90%);\n    }\n    50% {\n      transform: translate(-50%, -95%);\n    }\n    100% {\n      transform: translate(-50%, -90%);\n    }\n  }\n`;\n\nconst CharacterImage = styled.div`\n  width: 150px;\n  height: 150px;\n  background-image: url(${({ srcImage }) => srcImage});\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: contain;\n`;\nconst CharacterName = styled.span`\n  color: white;\n  font-size: 1.5em;\n`;\n\nconst Character = (props) => {\n  const {username = \"no-name\", x, y} = props;\n  return <Container x={x} y={y}>\n    <CharacterImage srcImage={GhostCharacter}></CharacterImage>\n    <CharacterName>{username}</CharacterName>\n  </Container>;\n};\n\nexport default Character;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport WannavileMap from \"../Resource/Map/wannavile.jpg\";\nimport Character from \"../Component/Character\";\n\nconst Container = styled.div`\n  width: 100vw;\n  height: 100vh;\n`;\n\nconst BackgroundImage = styled.img`\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 1500px;\n`;\n\nconst GamePage = (props) => {\n  const { moveTo, myUser, userList } = props;\n\n  const onBackgroundClick = (e) => {\n    moveTo( e.pageX, e.pageY )\n  }\n\n  return (\n    <Container>\n      <BackgroundImage src={WannavileMap} onClick={onBackgroundClick}></BackgroundImage>\n      {userList.map((user) => (\n        <Character key={user.id} x={user.x} y={user.y} username={user.name}>\n        </Character>\n      ))}\n      <Character key={myUser.id} x={myUser.x} y={myUser.y} username={myUser.name}>\n      </Character>\n    </Container>\n  );\n};\n\nexport default GamePage;\n","function SpaceshipUser(id, name) {\n  this.id = id\n  this.name = name\n  this.x = 0\n  this.y = 0\n  this.setPosition = (x, y) => {\n    this.x = x;\n    this.y = y;\n    return this\n  }\n  this.clone = () => {\n    return {\n      ...this\n    }\n  }\n}\n\nexport default SpaceshipUser;\n","import io from \"socket.io-client\";\n\nexport const EVENT_ENTER = \"e\"\nexport const EVENT_EXIT = \"x\"\nexport const EVENT_USER_LIST = \"l\"\nexport const EVENT_USER_MOVE = \"m\"\n\nexport default function SpaceshipSocket(host, port, {\n  onConnect, onUserListChange, onUserMove, userName\n}) {\n  this.socket = io(`http://${host}:${port}`);\n  this.id = \"\"\n  this.userList = [];\n  this.userName = \"\";\n\n  this.socket.on(\"connect\", () => {\n    console.log(\"ID\", this.socket.id);\n    this.socket.binary(true).emit(EVENT_ENTER, this.socket.id, userName);\n    this.id = this.socket.id;\n    onConnect(this.id)\n  });\n\n  this.socket.on(EVENT_ENTER, (id, name) => {\n    // console.log(\"Enter\", id, name);\n    this.userList.push({id,name});\n    if(onUserListChange) onUserListChange(this.userList)\n  });\n\n  this.socket.on(EVENT_EXIT, (id) => {\n    // console.log(\"Exit\", id);\n    const exitIndex = this.userList.findIndex(\n      (each) => each.id === id\n    );\n    if( exitIndex === -1 ) return\n    this.userList.splice(exitIndex, 1);\n    if(onUserListChange) onUserListChange(this.userList)\n  });\n\n  this.socket.on(EVENT_USER_LIST, (list) => {\n    this.userList = list;\n    if(onUserListChange) onUserListChange(this.userList, true)\n  });\n\n  this.socket.on(EVENT_USER_MOVE, (id, x,y) => {\n    if(onUserMove) onUserMove(id, x, y)\n  })\n}\n","import SpaceshipUser from \"./SpaceshipUser\";\nimport SpaceshipSocket from \"./SpaceshipSocket\";\n\nconst SOCKET_HOST = \"ec2-3-137-150-69.us-east-2.compute.amazonaws.com\";\n// const SOCKET_HOST = \"localhost\";\nconst SOCKET_PORT = 4000;\n\nconst onConnect = (id) => {\n  userMe.id = id;\n};\n\nconst onUserListChange = (list, withPosition = false) => {\n  const result = [...userList].filter((each) => {\n    const where = list.findIndex(({ id }) => id === each.id);\n    return where !== -1;\n  });\n  list.forEach(({ id, name, x = 0, y = 0 }) => {\n    const where = result.findIndex((each) => each.id === id);\n    if (where === -1 && id !== socket.id){\n      const user = new SpaceshipUser(id, name)\n      if( withPosition ) user.setPosition( x, y )\n      result.push( user );\n    }\n  });\n  userList = result;\n  userListCallback(userList);\n};\n\nconst onUserMove = (id, x, y) => {\n  if (userMe.id === id) {\n    userMe = userMe.setPosition(x, y);\n    userMeCallback(userMe);\n    return;\n  }\n  const who = userList.findIndex((each) => each.id === id);\n  const result = [...userList];\n  if (who === -1) return result;\n  result[who].x = x;\n  result[who].y = y;\n  userList = result;\n  userListCallback(userList);\n};\n\nvar socketController;\nvar socket;\n\nexport var userMe = new SpaceshipUser(\"\", \"\");\nexport var userList = [];\nvar userListCallback = null;\nvar userMeCallback = null;\n\nconst SpaceshipAPI = {\n  emit: (eventName, ...args) => {\n    if( socket ) socket.binary(true).emit(eventName, ...args);\n  },\n  setUserListCallback: (func) => {\n    userListCallback = func;\n  },\n  setUserMeCallback: (func) => {\n    userMeCallback = func;\n  },\n  setUsername: (name) => {\n    userMe.name = name;\n  },\n  connect: () => {\n    socketController = new SpaceshipSocket(SOCKET_HOST, SOCKET_PORT, {\n      onConnect,\n      onUserListChange,\n      onUserMove,\n      userName: userMe.name\n    });\n    socket = socketController.socket\n  }\n};\n\nexport default SpaceshipAPI;\n","import React, { useState, useEffect } from \"react\";\nimport { throttle } from \"./Utils/utility\";\nimport GamePage from \"./Page/GamePage\";\nimport SpaceshipAPI from \"./Utils/SpaceshipAPI\";\nimport SpaceshipUser from \"./Utils/SpaceshipUser\";\nimport { EVENT_USER_MOVE } from \"./Utils/SpaceshipSocket\";\n\nfunction App() {\n  const [myUser, setMyUser] = useState( new SpaceshipUser(\"\", \"\") );\n  const [userList, setUserList] = useState([]);\n\n  useEffect( () => {\n    SpaceshipAPI.setUsername( prompt(\"당신의 이름은?\", \"바보\"))\n    SpaceshipAPI.setUserListCallback((userList) => {\n      setUserList(userList)\n    });\n    SpaceshipAPI.setUserMeCallback((userMe) => {\n      setMyUser({...userMe})\n    });\n    SpaceshipAPI.connect()\n  }, [])\n\n  const moveTo = throttle((x, y) => {\n    SpaceshipAPI.emit(EVENT_USER_MOVE, x, y);\n  }, 100);\n\n  return (\n    <GamePage\n      moveTo={moveTo}\n      myUser={myUser}\n      userList={userList}\n    ></GamePage>\n  );\n}\n\nexport default App;\n","export const throttle = (func, interval) => {\n  var _id = null;\n  return (...args) => {\n    if (_id === null)\n      _id = setTimeout(() => {\n        func(...args);\n        _id = null;\n      }, interval);\n  };\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}